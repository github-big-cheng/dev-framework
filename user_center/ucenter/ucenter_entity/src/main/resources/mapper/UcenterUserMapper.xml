<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisely.ucenter.mapper.UcenterUserMapper">

    <resultMap type="com.wisely.ucenter.entity.UcenterUser" id="BaseResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orgId" column="org_id" jdbcType="INTEGER"/>
        <result property="orgName" column="org_name" jdbcType="VARCHAR"/>
        <result property="personId" column="person_id" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="isErrorTime" column="is_error_time" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="firstLogin" column="first_login" jdbcType="INTEGER"/>
        <result property="opState" column="op_state" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="BaseColumn">
        t.id,
        t.org_id,
        t.org_name,
        t.person_id,
        t.account,
        t.password,
        t.salt,
        t.is_error_time,
        t.status,
        t.first_login,
        t.op_state,
        t.create_by,
        t.create_time,
        t.update_by,
        t.update_time,
        t.is_deleted
    </sql>

    <!-- 动态字段 -->
    <sql id="DynamicColumn">
        <if test="orgId != null">
            org_id,
        </if>
        <if test="orgName != null and orgName != ''">
            org_name,
        </if>
        <if test="personId != null">
            person_id,
        </if>
        <if test="account != null and account != ''">
            account,
        </if>
        <if test="password != null and password != ''">
            password,
        </if>
        <if test="salt != null and salt != ''">
            salt,
        </if>
        <if test="isErrorTime != null">
            is_error_time,
        </if>
        <if test="status != null">
            status,
        </if>
        <if test="firstLogin != null">
            first_login,
        </if>
        <if test="opState != null">
            op_state,
        </if>
        <if test="createBy != null">
            create_by,
        </if>
        <if test="createTime != null and createTime != ''">
            create_time,
        </if>
        <if test="updateBy != null">
            update_by,
        </if>
        <if test="updateTime != null and updateTime != ''">
            update_time,
        </if>
        <if test="isDeleted != null">
            is_deleted,
        </if>
    </sql>

    <!-- 动态值 -->
    <sql id="DynamicValue">
        <if test="orgId != null">
            #{orgId},
        </if>
        <if test="orgName != null and orgName != ''">
            #{orgName},
        </if>
        <if test="personId != null">
            #{personId},
        </if>
        <if test="account != null and account != ''">
            #{account},
        </if>
        <if test="password != null and password != ''">
            #{password},
        </if>
        <if test="salt != null and salt != ''">
            #{salt},
        </if>
        <if test="isErrorTime != null">
            #{isErrorTime},
        </if>
        <if test="status != null">
            #{status},
        </if>
        <if test="firstLogin != null">
            #{firstLogin},
        </if>
        <if test="opState != null">
            #{opState},
        </if>
        <if test="createBy != null">
            #{createBy},
        </if>
        <if test="createTime != null and createTime != ''">
            #{createTime},
        </if>
        <if test="updateBy != null">
            #{updateBy},
        </if>
        <if test="updateTime != null and updateTime != ''">
            #{updateTime},
        </if>
        <if test="isDeleted != null">
            #{isDeleted},
        </if>
    </sql>

    <!-- 动态赋值 -->
    <sql id="DynamicSet">
        <if test="orgId != null">
            org_id = #{orgId},
        </if>
        <if test="orgName != null">
            org_name = #{orgName},
        </if>
        <if test="personId != null">
            person_id = #{personId},
        </if>
        <if test="account != null">
            account = #{account},
        </if>
        <if test="password != null">
            password = #{password},
        </if>
        <if test="salt != null">
            salt = #{salt},
        </if>
        <if test="isErrorTime != null">
            is_error_time = #{isErrorTime},
        </if>
        <if test="status != null">
            status = #{status},
        </if>
        <if test="firstLogin != null">
            first_login = #{firstLogin},
        </if>
        <if test="opState != null">
            op_state = #{opState},
        </if>
        <if test="createBy != null">
            create_by = #{createBy},
        </if>
        <if test="createTime != null">
            create_time = #{createTime},
        </if>
        <if test="updateBy != null">
            update_by = #{updateBy},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime},
        </if>
        <if test="isDeleted != null">
            is_deleted = #{isDeleted},
        </if>
    </sql>

    <!-- 动态条件 -->
    <sql id="DynamicWhere">
        <if test="orgId != null">
            and t.org_id = #{orgId}
        </if>
        <if test="orgName != null and orgName != ''">
            and t.org_name = #{orgName}
        </if>
        <if test="personId != null">
            and t.person_id = #{personId}
        </if>
        <if test="account != null and account != ''">
            and t.account = #{account}
        </if>
        <if test="password != null and password != ''">
            and t.password = #{password}
        </if>
        <if test="salt != null and salt != ''">
            and t.salt = #{salt}
        </if>
        <if test="isErrorTime != null">
            and t.is_error_time = #{isErrorTime}
        </if>
        <if test="status != null">
            and t.status = #{status}
        </if>
        <if test="firstLogin != null">
            and t.first_login = #{firstLogin}
        </if>
        <if test="opState != null">
            and t.op_state = #{opState}
        </if>
        <if test="createBy != null">
            and t.create_by = #{createBy}
        </if>
        <if test="createTime != null and createTime != ''">
            and t.create_time = #{createTime}
        </if>
        <if test="updateBy != null">
            and t.update_by = #{updateBy}
        </if>
        <if test="updateTime != null and updateTime != ''">
            and t.update_time = #{updateTime}
        </if>
        <if test="isDeleted != null">
            and t.is_deleted = #{isDeleted}
        </if>
        <if test="personIdQueryIn != null and personIdQueryIn != ''">
            and t.person_id in
            <foreach collection="personIdQueryIn.split(',')" open="(" close=")" separator="," item="personId" index="">
                #{personId}
            </foreach>
        </if>
        <if test="accountQueryIn != null and accountQueryIn != ''">
            and t.account in
            <foreach collection="accountQueryIn.split(',')" open="(" close=")" separator="," index="" item="acc">
                #{acc}
            </foreach>
        </if>

        <if test="idQueryIn != null and idQueryIn != ''">
            and t.id in
            <foreach collection="idQueryIn.split(',')" open="(" close=")" item="uId" separator=",">
                #{uId}
            </foreach>
        </if>
    </sql>

    <!--查询单个-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="BaseColumn"/>
        from t_ucenter_user t
        where id = #{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.wisely.ucenter.entity.UcenterUser">
        insert into t_ucenter_user (
            org_id,
            org_name,
            person_id,
            account,
            password,
            salt,
            is_error_time,
            status,
            first_login,
            op_state,
            create_by,
            create_time,
            update_by,
            update_time,
            is_deleted
        ) values (
            #{orgId},            
            #{orgName},            
            #{personId},            
            #{account},            
            #{password},            
            #{salt},            
            #{isErrorTime},
            #{status},
            #{firstLogin},
            #{opState},
            #{createBy},            
            #{createTime},            
            #{updateBy},            
            #{updateTime},            
            #{isDeleted}            
        )
    </insert>

    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.wisely.ucenter.entity.UcenterUser">
        insert into t_ucenter_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="DynamicColumn"/>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <include refid="DynamicValue"/>
        </trim>
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByPrimaryKey" parameterType="com.wisely.ucenter.entity.UcenterUser">
        update t_ucenter_user
        <set>
            org_id = #{orgId},
            org_name = #{orgName},
            person_id = #{personId},
            account = #{account},
            password = #{password},
            salt = #{salt},
            is_error_time = #{isErrorTime},
            status = #{status},
            first_login = #{firstLogin},
            op_state = #{opState},
            create_by = #{createBy},
            create_time = #{createTime},
            update_by = #{updateBy},
            update_time = #{updateTime},
            is_deleteD = #{isDeleted},
        </set>
        where id = #{id}
    </update>

    <!-- 通过主键动态修改数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.wisely.ucenter.entity.UcenterUser">
        update t_ucenter_user
        <trim prefix="set" suffixOverrides=",">
            <include refid="DynamicSet"/>
        </trim>
        where id = #{id}
    </update>


    <!-- 根据条件动态修改数据 -->
    <update id="updateBySelective" parameterType="com.wisely.ucenter.entity.UcenterUser">
        update t_ucenter_user t
        <trim prefix="set" suffixOverrides=",">
            <include refid="DynamicSet"/>
        </trim>
        <trim prefix="where" prefixOverrides="AND | OR">
            <choose>
            <when test="idQueryIn != null and idQueryIn != ''">
                and t.id in
                <foreach collection="idQueryIn.split(',')" separator="," index="" open="(" close=")" item="uId">
                    #{uId}
                </foreach>
            </when>
                <!-- 为避免全表更新，至少有一个查询条件 -->
                <otherwise>
                    and id = #{id}
                </otherwise>
            </choose>
        </trim>
    </update>


    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_ucenter_user
        where id = #{id}
    </delete>

    <!--通过实体作为筛选条件查询-->
    <select id="selectListBySelective" parameterType="com.wisely.ucenter.entity.UcenterUser" resultMap="BaseResultMap">
        select <include refid="BaseColumn"/>
        from t_ucenter_user t
        <trim prefix="where " prefixOverrides="AND | OR">
            <include refid="DynamicWhere"/>
        </trim>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by ${orderBy}
            </when>
            <otherwise>
                order by t.id desc
            </otherwise>
        </choose>
    </select>

</mapper>

