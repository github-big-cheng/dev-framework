<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisely.sys.mapper.SysCodeMapper">

    <resultMap type="com.wisely.sys.entity.SysCode" id="BaseResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="value" column="value" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="locale" column="locale" jdbcType="VARCHAR"/>
        <result property="pathValue" column="path_value" jdbcType="VARCHAR"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="INTEGER"/>
        <result property="parent" column="parent" jdbcType="VARCHAR"/>
        <result property="isSys" column="is_sys" jdbcType="INTEGER"/>
        <result property="opState" column="op_state" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="BaseColumn">
        t.id,
        t.value,
        t.type,
        t.locale,
        t.path_value,
        t.code,
        t.name,
        t.order_no,
        t.parent,
        t.is_sys,
        t.op_state,
        t.create_by,
        t.create_time,
        t.update_by,
        t.update_time,
        t.is_deleted
    </sql>
    
    <!-- 动态字段 -->
    <sql id="DynamicColumn">
        <if test="value != null and value != ''"> 
            value, 
        </if>
        <if test="type != null and type != ''"> 
            type, 
        </if>
        <if test="locale != null and locale != ''"> 
            locale, 
        </if>
        <if test="pathValue != null and pathValue != ''"> 
            path_value, 
        </if>
        <if test="code != null and code != ''"> 
            code, 
        </if>
        <if test="name != null and name != ''"> 
            name, 
        </if>
        <if test="orderNo != null"> 
            order_no, 
        </if>
        <if test="parent != null and parent != ''"> 
            parent, 
        </if>
        <if test="isSys != null"> 
            is_sys, 
        </if>
        <if test="opState != null"> 
            op_state, 
        </if>
        <if test="createBy != null"> 
            create_by, 
        </if>
        <if test="createTime != null and createTime != ''"> 
            create_time, 
        </if>
        <if test="updateBy != null"> 
            update_by, 
        </if>
        <if test="updateTime != null and updateTime != ''"> 
            update_time, 
        </if>
        <if test="isDeleted != null"> 
            is_deleted, 
        </if>
    </sql>
    
    <!-- 动态值 -->
    <sql id="DynamicValue">
        <if test="value != null and value != ''">
            #{value},
        </if>
        <if test="type != null and type != ''">
            #{type},
        </if>
        <if test="locale != null and locale != ''">
            #{locale},
        </if>
        <if test="pathValue != null and pathValue != ''">
            #{pathValue},
        </if>
        <if test="code != null and code != ''">
            #{code},
        </if>
        <if test="name != null and name != ''">
            #{name},
        </if>
        <if test="orderNo != null">
            #{orderNo},
        </if>
        <if test="parent != null and parent != ''">
            #{parent},
        </if>
        <if test="isSys != null">
            #{isSys},
        </if>
        <if test="opState != null">
            #{opState},
        </if>
        <if test="createBy != null">
            #{createBy},
        </if>
        <if test="createTime != null and createTime != ''">
            #{createTime},
        </if>
        <if test="updateBy != null">
            #{updateBy},
        </if>
        <if test="updateTime != null and updateTime != ''">
            #{updateTime},
        </if>
        <if test="isDeleted != null">
            #{isDeleted},
        </if>
    </sql>
    
    <!-- 动态赋值 -->
    <sql id="DynamicSet">
        <if test="value != null">
            value = #{value},
        </if>
        <if test="type != null">
            type = #{type},
        </if>
        <if test="locale != null">
            locale = #{locale},
        </if>
        <if test="pathValue != null">
            path_value = #{pathValue},
        </if>
        <if test="code != null">
            code = #{code},
        </if>
        <if test="name != null">
            name = #{name},
        </if>
        <if test="orderNo != null">
            order_no = #{orderNo},
        </if>
        <if test="parent != null">
            parent = #{parent},
        </if>
        <if test="isSys != null">
            is_sys = #{isSys},
        </if>
        <if test="opState != null">
            op_state = #{opState},
        </if>
        <if test="createBy != null">
            create_by = #{createBy},
        </if>
        <if test="createTime != null">
            create_time = #{createTime},
        </if>
        <if test="updateBy != null">
            update_by = #{updateBy},
        </if>
        <if test="updateTime != null">
            update_time = #{updateTime},
        </if>
        <if test="isDeleted != null">
            is_deleted = #{isDeleted},
        </if>
    </sql>
    
    <!-- 动态条件 -->
    <sql id="DynamicWhere">
        <if test="value != null and value != ''">
            and t.value = #{value}
        </if>
        <if test="type != null and type != ''">
            and t.type = #{type}
        </if>
        <if test="locale != null and locale != ''">
            and t.locale = #{locale}
        </if>
        <if test="pathValue != null and pathValue != ''">
            and t.path_value = #{pathValue}
        </if>
        <if test="code != null and code != ''">
            and t.code = #{code}
        </if>
        <if test="name != null and name != ''">
            and t.name = #{name}
        </if>
        <if test="orderNo != null">
            and t.order_no = #{orderNo}
        </if>
        <if test="parent != null and parent != ''">
            and t.parent = #{parent}
        </if>
        <if test="isSys != null">
            and t.is_sys = #{isSys}
        </if>
        <if test="opState != null">
            and t.op_state = #{opState}
        </if>
        <if test="createBy != null">
            and t.create_by = #{createBy}
        </if>
        <if test="createTime != null and createTime != ''">
            and t.create_time = #{createTime}
        </if>
        <if test="updateBy != null">
            and t.update_by = #{updateBy}
        </if>
        <if test="updateTime != null and updateTime != ''">
            and t.update_time = #{updateTime}
        </if>
        <if test="isDeleted != null">
            and t.is_deleted = #{isDeleted}
        </if>

        <if test="codeQueryLike != null and codeQueryLike != ''">
            and t.code like concat('%', #{codeQueryLike},'%')
        </if>
        <if test="nameQueryLike != null and nameQueryLike != ''">
            and t.name like concat ('%',#{nameQueryLike},'%')
        </if>
        <if test="codeOrNameQueryLike != null and codeOrNameQueryLike != ''">
            and (t.code like concat('%', #{codeOrNameQueryLike},'%') or t.NAME like concat
            ('%',#{codeOrNameQueryLike},'%'))
        </if>
        <if test="valueQueryIn != null and valueQueryIn != ''">
            and t.value in
            <foreach collection="valueQueryIn.split(',')" separator="," open="(" close=")" item="v">
                #{v}
            </foreach>
        </if>
        <if test="typeQueryIsNull != null and typeQueryIsNull != ''">
            and t.type is null
        </if>

        <if test="pathValueQueryLike != null and pathValueQueryLike != ''">
            and t.path_value like concat('%', #{pathValueQueryLike}, '%')
        </if>
        <if test="typeQueryNotIn != null and typeQueryNotIn != ''">
            and t.type not in
            <foreach collection="typeQueryNotIn.split(',')" separator="," open="(" close=")" item="tn">
                #{tn}
            </foreach>
        </if>
    </sql>

    <!--查询单个-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="BaseColumn" />
        from t_sys_code T
        where id = #{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.wisely.sys.entity.SysCode">
        insert into t_sys_code (
            value,
            type,
            locale,
            path_value,
            code,
            name,
            order_no,
            parent,
            is_sys,
            op_state,
            create_by,
            create_time,
            update_by,
            update_time,
            is_deleted
        ) values (
            #{value},            
            #{type},            
            #{locale},            
            #{pathValue},            
            #{code},            
            #{name},            
            #{orderNo},            
            #{parent},            
            #{isSys},            
            #{opState},            
            #{createBy},            
            #{createTime},            
            #{updateBy},            
            #{updateTime},            
            #{isDeleted}            
        )
    </insert>
    
    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.wisely.sys.entity.SysCode">
        insert into t_sys_code
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <include refid="DynamicColumn" />
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <include refid="DynamicValue" />
        </trim>
    </insert>

    <!--通过主键修改数据-->
    <update id="updateByPrimaryKey" parameterType="com.wisely.sys.entity.SysCode">
        update t_sys_code
        <set>
            value = #{value},
            type = #{type},
            locale = #{locale},
            path_value = #{pathValue},
            code = #{code},
            name = #{name},
            order_no = #{orderNo},
            parent = #{parent},
            is_sys = #{isSys},
            op_state = #{opState},
            create_by = #{createBy},
            create_time = #{createTime},
            update_by = #{updateBy},
            update_time = #{updateTime},
            is_deleted = #{isDeleted},
        </set>
        where id = #{id}
    </update>
    
    <!-- 通过主键动态修改数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.wisely.sys.entity.SysCode">
        update t_sys_code
        <trim prefix="set" suffixOverrides="," >
            <include refid="DynamicSet" />
        </trim>
        where id = #{id}
    </update>
    
    
    <!-- 根据条件动态修改数据 -->
    <update id="updateBySelective" parameterType="com.wisely.sys.entity.SysCode">
        UPDATE t_sys_code t
        <trim prefix="set" suffixOverrides="," >
            <include refid="DynamicSet" />
        </trim>
        <trim prefix="where" prefixOverrides="AND | OR" >
            <choose>
                <!-- 为避免全表更新，至少有一个查询条件 -->
                <otherwise>
                   and id = #{id}
                </otherwise>
            </choose>
        </trim>
    </update>
    

    <!--通过主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_sys_code
        where id = #{id}
    </delete>
    
    
    <!--通过实体作为筛选条件查询-->
    <select id="selectListBySelective" parameterType="com.wisely.sys.entity.SysCode" resultMap="BaseResultMap">
        select<include refid="BaseColumn" />
        from t_sys_code t
        <trim prefix="where " prefixOverrides="AND | OR" >
            <include refid="DynamicWhere" />
        </trim>
        <choose>
            <when test="orderBy != null and orderBy != ''">
                order by ${orderBy}
            </when>
            <otherwise>
                order by t.order_no, t.value
            </otherwise>
        </choose>
    </select>

    <select id="selectLocales" resultType="java.lang.String">
        select distinct locale from t_sys_code where is_deleted = 0
    </select>

</mapper>

